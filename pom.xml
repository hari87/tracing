<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>nl.hari</groupId>
	<artifactId>trace-example</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>trace-example</name>
	<description>opentracing</description>

	<properties>
		<java.version>1.8</java.version>
		<camel.version>2.23.2</camel.version>
		<commons.dbcp>1.4</commons.dbcp>
		<commons.pool>1.6</commons.pool>
		<basex.version>9.1.2</basex.version>
		<commons-io.version>1.3.2</commons-io.version>
		<cxf-bundle.version>2.7.18</cxf-bundle.version>
		<jsr.version>2.9.8</jsr.version>
		<springfox.version>2.9.2</springfox.version>
		<oracle.driver.version>8</oracle.driver.version>
		<swagger.plugin.version>2.3.1</swagger.plugin.version>
		<fabric8.plugin.version>4.0.0</fabric8.plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<!--opentracing & Jaeger dependencies  -->
		<!--<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-opentracing-starter</artifactId>
			<version>2.23.1</version>
		</dependency>
		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-spring-jaeger-cloud-starter</artifactId>
			<version>1.0.3</version>
		</dependency>-->
		<!-- prometheus & micrometer dependencies -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-micrometer-starter</artifactId>
			<version>2.23.1</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>1.1.3</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- camel DB dependencies -->
		<!--<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-sql</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons.dbcp}</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>${commons.pool}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jackson-starter</artifactId>
			<version>${camel.version}</version>
		</dependency>-->
		<!--the jackson dependencies are added to support OffsetDateTime unmarshalling-->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jsr.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
			<version>${jsr.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jsr.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-hystrix-starter</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<!-- basex dependencies -->
		<!--<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-saxon</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.basex</groupId>
			<artifactId>basex</artifactId>
			<version>${basex.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-bundle-jaxrs</artifactId>
			<version>${cxf-bundle.version}</version>
		</dependency>-->
		<!-- swagger code generator dependencies -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.22</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>nl.hari.TraceExampleApplication</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.plugin.version}</version>
				<executions>
					<execution>
						<id>fmp</id>
						<goals>
							<goal>resource</goal>
							<goal>helm</goal>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>false</skip>
					<verbose>true</verbose>
					<resources>
					</resources>
					<generator>
						<config>
							<java-exec>
								<from>docker.io/java:openjdk-8-jdk</from>
								<mainClass>nl.hari.TraceExampleApplication</mainClass>
							</java-exec>
						</config>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
